/* esm.sh - esbuild bundle(internmap@2.0.3) esnext production */
var u=class extends Map{constructor(e,s=h){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:s}}),e!=null)for(let[r,f]of e)this.set(r,f)}get(e){return super.get(n(this,e))}has(e){return super.has(n(this,e))}set(e,s){return super.set(i(this,e),s)}delete(e){return super.delete(c(this,e))}},o=class extends Set{constructor(e,s=h){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:s}}),e!=null)for(let r of e)this.add(r)}has(e){return super.has(n(this,e))}add(e){return super.add(i(this,e))}delete(e){return super.delete(c(this,e))}};function n({_intern:t,_key:e},s){let r=e(s);return t.has(r)?t.get(r):s}function i({_intern:t,_key:e},s){let r=e(s);return t.has(r)?t.get(r):(t.set(r,s),s)}function c({_intern:t,_key:e},s){let r=e(s);return t.has(r)&&(s=t.get(r),t.delete(r)),s}function h(t){return t!==null&&typeof t=="object"?t.valueOf():t}export{u as InternMap,o as InternSet};
//# sourceMappingURL=internmap.mjs.map